{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Profile.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","qr","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","connect","send","dt","sum","fn","i","fp","Profile","platform","useState","email","setEmail","phone","setPhone","osName","useEffect","subscribe","detail","type","data","left","IOS","App","activePanel","setActivePanel","setUser","popout","setPopout","setQR","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","code_data","a","async","sendPromise","user","fetchData","QR","match","prepareQR","e","currentTarget","dataset","to","activeStory","tabbar","selected","height","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.71c2220a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport connect from \"@vkontakte/vk-connect\";\n\nconst Home = ({ id, go, fetchedUser, qr }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Profile\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"profile\">\n\t\t\t\t\tProfile\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t<Group title=\"QR Reader\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={() => {\n\t\t\t\t\tconnect.send(\"VKWebAppOpenCodeReader\", {});\n\t\t\t\t}}>\n\t\t\t\t\tOpen QR reader\n\t\t\t\t</Button>\n\t\t\t\t<div>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>{`qr.dt = ${qr.dt}`}</li>\n\t\t\t\t\t\t<li>{`qr.sum = ${qr.sum}`}</li>\n\t\t\t\t\t\t<li>{`qr.fn = ${qr.fn}`}</li>\n\t\t\t\t\t\t<li>{`qr.i = ${qr.i}`}</li>\n\t\t\t\t\t\t<li>{`qr.fp = ${qr.fp}`}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\r\nimport {\r\n\tFormLayout,\r\n\tIOS,\r\n\tPanel,\r\n\tPanelHeader,\r\n\tplatform,\r\n\tInput,\r\n\tHeaderButton,\r\n\tFormLayoutGroup,\r\n\tGroup, List, InfoRow, Cell, Button\r\n} from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport connect from \"@vkontakte/vk-connect\";\r\n\r\nconst Profile = ({id, go}) =>{\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst osName = platform();\r\n\r\n\tuseEffect(()=>{\r\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'VKWebAppGetPersonalCardResult':\r\n\t\t\t\t\tsetEmail(data.email);\r\n\t\t\t\t\tsetPhone(data.phone);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\treturn(\r\n\t\t<Panel id={id} >\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<HeaderButton onClick={go} data-to=\"home\">\r\n\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t\t</HeaderButton>}\r\n\t\t\t>\r\n\t\t\t\tПрофиль\r\n\t\t\t</PanelHeader>\r\n\t\t\t<FormLayout>\r\n\t\t\t\t<Group>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t<Cell>\r\n\t\t\t\t\t\t\t<InfoRow title='E-mail'>\r\n\t\t\t\t\t\t\t\t{email ? email : 'Необходимо получить email'}\r\n\t\t\t\t\t\t\t</InfoRow>\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t\t<Cell>\r\n\t\t\t\t\t\t\t<InfoRow title='Телефон'>\r\n\t\t\t\t\t\t\t\t{phone ? phone : 'Необходимо получить телефон'}\r\n\t\t\t\t\t\t\t</InfoRow>\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Group>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={() => {\r\n\t\t\t\t\tconnect.send(\"VKWebAppGetPersonalCard\", {\"type\": [\"phone\", \"email\"]});\r\n\t\t\t\t}}>\r\n\t\t\t\t\tПолучить данные из VK\r\n\t\t\t\t</Button>\r\n\t\t\t</FormLayout>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Profile from \"./panels/Profile\";\nimport {Epic, Tabbar, TabbarItem} from \"@vkontakte/vkui\";\nimport Icon28HomeOutline from '@vkontakte/icons/dist/28/home_outline';\nimport Icon28User from '@vkontakte/icons/dist/28/user';\nimport Icon24Qr from '@vkontakte/icons/dist/24/qr';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [qr, setQR] = useState('');\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'VKWebAppUpdateConfig':\n\t\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppOpenCodeReaderResult':\n\t\t\t\t\tsetQR(data.code_data);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst prepareQR = (qr) => {\n\t\tlet arr, dt, sum, fn, i, fp;\n\n\t\tif (qr) {\n\t\t\t[, dt, sum, fn, i, fp] = qr.match(/t=(\\w{8}T\\w+)&s=(\\w+\\.*\\w+)&fn=(\\w+)&i=(\\w+)&fp=(\\w+)/);\n\t\t}\n\n\t\treturn {\n\t\t\tdt,\n\t\t\tsum,\n\t\t\tfn,\n\t\t\ti,\n\t\t\tfp\n\t\t}\n\t};\n\n\tconst QR = prepareQR(qr);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<Epic activeStory={activePanel} tabbar={\n\t\t\t<Tabbar>\n\t\t\t\t<TabbarItem\n\t\t\t\t\tselected={activePanel === 'home'}\n\t\t\t\t\tonClick={go}\n\t\t\t\t\tdata-to='home'\n\t\t\t\t>\n\t\t\t\t\t<Icon28HomeOutline />\n\t\t\t\t</TabbarItem>\n\t\t\t\t<TabbarItem\n\t\t\t\t\tselected={activePanel === 'profile'}\n\t\t\t\t\tonClick={go}\n\t\t\t\t\tdata-to='profile'\n\t\t\t\t>\n\t\t\t\t\t<Icon28User />\n\t\t\t\t</TabbarItem>\n\t\t\t\t<TabbarItem\n\t\t\t\t\tonClick={() => {connect.send(\"VKWebAppOpenCodeReader\", {});}}\n\t\t\t\t>\n\t\t\t\t\t<Icon24Qr height={28} width={28}/>\n\t\t\t\t</TabbarItem>\n\t\t\t</Tabbar>\n\t\t}>\n\t\t\t<View id='home' activePanel='home' popout={popout}>\n\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} qr={QR}/>\n\t\t\t</View>\n\t\t\t<View id='profile' activePanel='profile' popout={popout}>\n\t\t\t\t<Profile id='profile' go={go} />\n\t\t\t</View>\n\t\t</Epic>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}